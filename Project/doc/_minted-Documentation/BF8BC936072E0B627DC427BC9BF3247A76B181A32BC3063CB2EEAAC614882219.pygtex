\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cm}{/*}
\PYG{c+cm}{ * generated by Xtext 2.10.0}
\PYG{c+cm}{ */}
\PYG{k+kn}{package} \PYG{n+nn}{at.ooe.fh.mdm.herzog.dsl.proj.validation}

\PYG{k+kn}{import} \PYG{n+nn}{at.ooe.fh.mdm.herzog.dsl.proj.projectGenerator.JpaConfig}
\PYG{k+kn}{import} \PYG{n+nn}{at.ooe.fh.mdm.herzog.dsl.proj.projectGenerator.Localized}
\PYG{k+kn}{import} \PYG{n+nn}{at.ooe.fh.mdm.herzog.dsl.proj.projectGenerator.Module}
\PYG{k+kn}{import} \PYG{n+nn}{at.ooe.fh.mdm.herzog.dsl.proj.projectGenerator.Observer}
\PYG{k+kn}{import} \PYG{n+nn}{at.ooe.fh.mdm.herzog.dsl.proj.projectGenerator.ProjectGeneratorPackage}
\PYG{k+kn}{import} \PYG{n+nn}{at.ooe.fh.mdm.herzog.dsl.proj.projectGenerator.ServiceConfig}
\PYG{k+kn}{import} \PYG{n+nn}{java.util.Objects}
\PYG{k+kn}{import} \PYG{n+nn}{java.util.regex.Pattern}
\PYG{k+kn}{import} \PYG{n+nn}{org.eclipse.xtext.validation.Check}

\PYG{k+kn}{import} \PYG{n+nn}{static} \PYG{n}{java}\PYG{o}{.}\PYG{n+na}{util}\PYG{o}{.}\PYG{n+na}{stream}\PYG{o}{.}\PYG{n+na}{Collectors}\PYG{o}{.*}

\PYG{c+cm}{/**}
\PYG{c+cm}{ * This class contains custom validation rules. }
\PYG{c+cm}{ * }
\PYG{c+cm}{ * See https://www.eclipse.org/Xtext/documentation/303\PYGZus{}runtime\PYGZus{}concepts.html\PYGZsh{}validation}
\PYG{c+cm}{ */}
\PYG{k+kd}{class} \PYG{n+nc}{ProjectGeneratorValidator} \PYG{k+kd}{extends} \PYG{n}{AbstractProjectGeneratorValidator} \PYG{o}{\PYGZob{}}

	\PYG{c+cm}{/**}
\PYG{c+cm}{	 * The Class holding the validator ids.}
\PYG{c+cm}{	 */}
	\PYG{k+kd}{public} \PYG{k+kd}{static} \PYG{k+kd}{class} \PYG{n+nc}{ValidatorId} \PYG{o}{\PYGZob{}}
		\PYG{c+c1}{// Module}
		\PYG{k+kd}{public} \PYG{k+kd}{static} \PYG{k+kd}{final} \PYG{n}{String} \PYG{n}{MODULE\PYGZus{}EMPTY} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}MODULE\PYGZus{}EMPTY\PYGZdq{}}\PYG{o}{;}
		\PYG{k+kd}{public} \PYG{k+kd}{static} \PYG{k+kd}{final} \PYG{n}{String} \PYG{n}{MODULE\PYGZus{}NAME\PYGZus{}CAMEL\PYGZus{}CASE} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}MODULE\PYGZus{}NAME\PYGZus{}CAMEL\PYGZus{}CASE\PYGZdq{}}\PYG{o}{;}
		\PYG{k+kd}{public} \PYG{k+kd}{static} \PYG{k+kd}{final} \PYG{n}{String} \PYG{n}{MODULE\PYGZus{}KEY\PYGZus{}UPPER\PYGZus{}CASE} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}MODULE\PYGZus{}KEY\PYGZus{}UPPER\PYGZus{}CASE\PYGZdq{}}\PYG{o}{;}
		\PYG{c+c1}{// Observer}
		\PYG{k+kd}{public} \PYG{k+kd}{static} \PYG{k+kd}{final} \PYG{n}{String} \PYG{n}{OBSERVER\PYGZus{}NAME\PYGZus{}CAMEL\PYGZus{}CASE} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}OBSERVER\PYGZus{}NAME\PYGZus{}CAMEL\PYGZus{}CASE\PYGZdq{}}\PYG{o}{;}
		\PYG{k+kd}{public} \PYG{k+kd}{static} \PYG{k+kd}{final} \PYG{n}{String} \PYG{n}{OBSERVER\PYGZus{}NAME\PYGZus{}DUPLICATE} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}OBSERVER\PYGZus{}NAME\PYGZus{}UNIQUE\PYGZdq{}}\PYG{o}{;}
		\PYG{c+c1}{// Localized}
		\PYG{k+kd}{public} \PYG{k+kd}{static} \PYG{k+kd}{final} \PYG{n}{String} \PYG{n}{LOCALIZED\PYGZus{}NAME\PYGZus{}CAMEL\PYGZus{}CASE} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}LOCALIZED\PYGZus{}NAME\PYGZus{}CAMEL\PYGZus{}CASE\PYGZdq{}}\PYG{o}{;}
		\PYG{k+kd}{public} \PYG{k+kd}{static} \PYG{k+kd}{final} \PYG{n}{String} \PYG{n}{LOCALIZED\PYGZus{}NAME\PYGZus{}DUPLICATE} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}LOCALIZED\PYGZus{}NAME\PYGZus{}UNIQUE\PYGZdq{}}\PYG{o}{;}
		\PYG{k+kd}{public} \PYG{k+kd}{static} \PYG{k+kd}{final} \PYG{n}{String} \PYG{n}{LOCALIZED\PYGZus{}ENTRY\PYGZus{}DUPLICATE} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}LOCALIZED\PYGZus{}ENTRY\PYGZus{}DUPLICATE\PYGZdq{}}\PYG{o}{;}
		\PYG{k+kd}{public} \PYG{k+kd}{static} \PYG{k+kd}{final} \PYG{n}{String} \PYG{n}{LOCALIZED\PYGZus{}ENTRY\PYGZus{}UNDEFINED} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}LOCALIZED\PYGZus{}ENTRY\PYGZus{}UNDEFINED\PYGZdq{}}\PYG{o}{;}
		\PYG{c+c1}{// ServiceConfig}
		\PYG{k+kd}{public} \PYG{k+kd}{static} \PYG{k+kd}{final} \PYG{n}{String} \PYG{n}{SERVICE\PYGZus{}CONFIG\PYGZus{}MESSAGE\PYGZus{}BUNDLE\PYGZus{}DUPLICATE} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}SERVICE\PYGZus{}CONFIG\PYGZus{}MESSAGE\PYGZus{}BUNDLE\PYGZus{}DUPLICATE\PYGZdq{}}\PYG{o}{;}
		\PYG{c+c1}{// JpaConfig}
		\PYG{k+kd}{public} \PYG{k+kd}{static} \PYG{k+kd}{final} \PYG{n}{String} \PYG{n}{JPA\PYGZus{}LOCALIZED\PYGZus{}ENUMS\PYGZus{}DUPLICATE} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}JPA\PYGZus{}LOCALIZED\PYGZus{}ENUMS\PYGZus{}DUPLICATE\PYGZdq{}}\PYG{o}{;}
	\PYG{o}{\PYGZcb{}}

	\PYG{k+kd}{static} \PYG{n}{Pattern} \PYG{n}{CAMEL\PYGZus{}CASE\PYGZus{}PATTERN} \PYG{o}{=} \PYG{n}{Pattern}\PYG{o}{.}\PYG{n+na}{compile}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}([A\PYGZhy{}Z]\PYGZob{}1\PYGZcb{}[a\PYGZhy{}z0\PYGZhy{}9]+)+\PYGZdq{}}\PYG{o}{);}

	\PYG{n+nd}{@Check}
	\PYG{n}{def} \PYG{n+nf}{checkForEmptyModule}\PYG{o}{(}\PYG{n}{Module} \PYG{n}{module}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{k}{if} \PYG{o}{(}\PYG{n}{module}\PYG{o}{.}\PYG{n+na}{key} \PYG{o}{==} \PYG{k+kc}{null} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{module}\PYG{o}{.}\PYG{n+na}{messageBundles}\PYG{o}{.}\PYG{n+na}{empty} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{module}\PYG{o}{.}\PYG{n+na}{observers}\PYG{o}{.}\PYG{n+na}{empty} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{module}\PYG{o}{.}\PYG{n+na}{jpaConfig} \PYG{o}{==} \PYG{k+kc}{null} \PYG{o}{\PYGZam{}\PYGZam{}}
			\PYG{n}{module}\PYG{o}{.}\PYG{n+na}{serviceConfig} \PYG{o}{==} \PYG{k+kc}{null}\PYG{o}{)} \PYG{o}{\PYGZob{}}
			\PYG{n}{val} \PYG{n}{errorMsg} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}Module is empty\PYGZdq{}}\PYG{o}{;}
			\PYG{n}{error}\PYG{o}{(}\PYG{n}{errorMsg}\PYG{o}{,} \PYG{n}{ProjectGeneratorPackage}\PYG{o}{.}\PYG{n+na}{Literals}\PYG{o}{.}\PYG{n+na}{MODULE\PYGZus{}\PYGZus{}NAME}\PYG{o}{,} \PYG{n}{ValidatorId}\PYG{o}{.}\PYG{n+na}{MODULE\PYGZus{}EMPTY}\PYG{o}{);}
		\PYG{o}{\PYGZcb{}}
	\PYG{o}{\PYGZcb{}}

	\PYG{c+c1}{// Module: Name must be camel case}
	\PYG{n+nd}{@Check}
	\PYG{n}{def} \PYG{n+nf}{checkForCamelCaseModuleName}\PYG{o}{(}\PYG{n}{Module} \PYG{n}{\PYGZus{}module}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{k}{if} \PYG{o}{(!}\PYG{n}{CAMEL\PYGZus{}CASE\PYGZus{}PATTERN}\PYG{o}{.}\PYG{n+na}{matcher}\PYG{o}{(}\PYG{n}{\PYGZus{}module}\PYG{o}{.}\PYG{n+na}{name}\PYG{o}{).}\PYG{n+na}{matches}\PYG{o}{)} \PYG{o}{\PYGZob{}}
			\PYG{n}{val} \PYG{n}{errorMsg} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}Module name must be a camel case string (e.g.: MyModuleName)\PYGZdq{}}\PYG{o}{;}
			\PYG{n}{error}\PYG{o}{(}\PYG{n}{errorMsg}\PYG{o}{,} \PYG{n}{ProjectGeneratorPackage}\PYG{o}{.}\PYG{n+na}{Literals}\PYG{o}{.}\PYG{n+na}{MODULE\PYGZus{}\PYGZus{}NAME}\PYG{o}{,} \PYG{n}{ValidatorId}\PYG{o}{.}\PYG{n+na}{MODULE\PYGZus{}NAME\PYGZus{}CAMEL\PYGZus{}CASE}\PYG{o}{);}
		\PYG{o}{\PYGZcb{}}
	\PYG{o}{\PYGZcb{}}

	\PYG{c+c1}{// Module: Key must be upper case}
	\PYG{n+nd}{@Check}
	\PYG{n}{def} \PYG{n+nf}{checkForUpperCaseModuleKey}\PYG{o}{(}\PYG{n}{Module} \PYG{n}{\PYGZus{}module}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{k}{for} \PYG{o}{(}\PYG{n}{Character} \PYG{n}{c} \PYG{o}{:} \PYG{n}{\PYGZus{}module}\PYG{o}{.}\PYG{n+na}{key}\PYG{o}{.}\PYG{n+na}{toCharArray}\PYG{o}{)} \PYG{o}{\PYGZob{}}
			\PYG{k}{if} \PYG{o}{(}\PYG{n}{Character}\PYG{o}{.}\PYG{n+na}{isLowerCase}\PYG{o}{(}\PYG{n}{c}\PYG{o}{))} \PYG{o}{\PYGZob{}}
				\PYG{n}{val} \PYG{n}{errorMsg} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}Module key must be upper case\PYGZdq{}}\PYG{o}{;}
				\PYG{n}{error}\PYG{o}{(}\PYG{n}{errorMsg}\PYG{o}{,} \PYG{n}{ProjectGeneratorPackage}\PYG{o}{.}\PYG{n+na}{Literals}\PYG{o}{.}\PYG{n+na}{MODULE\PYGZus{}\PYGZus{}KEY}\PYG{o}{,} \PYG{n}{ValidatorId}\PYG{o}{.}\PYG{n+na}{MODULE\PYGZus{}KEY\PYGZus{}UPPER\PYGZus{}CASE}\PYG{o}{);}
				\PYG{k}{return}\PYG{o}{;}
			\PYG{o}{\PYGZcb{}}
		\PYG{o}{\PYGZcb{}}
	\PYG{o}{\PYGZcb{}}

	\PYG{c+c1}{// Localized: Name must be camel case}
	\PYG{n+nd}{@Check}
	\PYG{n}{def} \PYG{n+nf}{checkForCamelCaseLocalizedName}\PYG{o}{(}\PYG{n}{Localized} \PYG{n}{\PYGZus{}localized}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{k}{if} \PYG{o}{(!}\PYG{n}{CAMEL\PYGZus{}CASE\PYGZus{}PATTERN}\PYG{o}{.}\PYG{n+na}{matcher}\PYG{o}{(}\PYG{n}{\PYGZus{}localized}\PYG{o}{.}\PYG{n+na}{name}\PYG{o}{).}\PYG{n+na}{matches}\PYG{o}{)} \PYG{o}{\PYGZob{}}
			\PYG{n}{val} \PYG{n}{errorMsg} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}Localized name must be a camel case string (e.g.: MyLocalizedName)\PYGZdq{}}\PYG{o}{;}
			\PYG{n}{error}\PYG{o}{(}\PYG{n}{errorMsg}\PYG{o}{,} \PYG{n}{ProjectGeneratorPackage}\PYG{o}{.}\PYG{n+na}{Literals}\PYG{o}{.}\PYG{n+na}{LOCALIZED\PYGZus{}\PYGZus{}NAME}\PYG{o}{,} \PYG{n}{ValidatorId}\PYG{o}{.}\PYG{n+na}{LOCALIZED\PYGZus{}NAME\PYGZus{}DUPLICATE}\PYG{o}{);}
		\PYG{o}{\PYGZcb{}}
	\PYG{o}{\PYGZcb{}}

	\PYG{c+c1}{// Localized: Name must be unique}
	\PYG{n+nd}{@Check}
	\PYG{n}{def} \PYG{n+nf}{checkForUniqueLocalizedName}\PYG{o}{(}\PYG{n}{Localized} \PYG{n}{\PYGZus{}localized}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{n}{val} \PYG{n}{module} \PYG{o}{=} \PYG{n}{\PYGZus{}localized}\PYG{o}{.}\PYG{n+na}{eContainer} \PYG{n}{as} \PYG{n}{Module}\PYG{o}{;}
		\PYG{n}{Objects}\PYG{o}{.}\PYG{n+na}{requireNonNull}\PYG{o}{(}\PYG{n}{module}\PYG{o}{,} \PYG{l+s}{\PYGZdq{}eContainer should be an instance of Module\PYGZdq{}}\PYG{o}{);}
		\PYG{n}{val} \PYG{n}{count} \PYG{o}{=} \PYG{n}{module}\PYG{o}{.}\PYG{n+na}{messageBundles}\PYG{o}{.}\PYG{n+na}{stream}\PYG{o}{.}\PYG{n+na}{filter}\PYG{o}{[}\PYG{n}{name}\PYG{o}{.}\PYG{n+na}{equals}\PYG{o}{(}\PYG{n}{\PYGZus{}localized}\PYG{o}{.}\PYG{n+na}{name}\PYG{o}{)].}\PYG{n+na}{distinct}\PYG{o}{.}\PYG{n+na}{count}\PYG{o}{;}
		\PYG{k}{if} \PYG{o}{(}\PYG{n}{count} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{1}\PYG{o}{)} \PYG{o}{\PYGZob{}}
			\PYG{n}{val} \PYG{n}{errorMsg} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}Localized name is used by \PYGZsq{}\PYGZdq{}} \PYG{o}{+} \PYG{o}{(}\PYG{n}{count} \PYG{o}{\PYGZhy{}} \PYG{l+m+mi}{1}\PYG{o}{)} \PYG{o}{+} \PYG{l+s}{\PYGZdq{}\PYGZsq{} other Localized instances\PYGZdq{}}\PYG{o}{;}
			\PYG{n}{error}\PYG{o}{(}\PYG{n}{errorMsg}\PYG{o}{,} \PYG{n}{ProjectGeneratorPackage}\PYG{o}{.}\PYG{n+na}{Literals}\PYG{o}{.}\PYG{n+na}{LOCALIZED\PYGZus{}\PYGZus{}NAME}\PYG{o}{,} \PYG{n}{ValidatorId}\PYG{o}{.}\PYG{n+na}{LOCALIZED\PYGZus{}NAME\PYGZus{}CAMEL\PYGZus{}CASE}\PYG{o}{);}
		\PYG{o}{\PYGZcb{}}
	\PYG{o}{\PYGZcb{}}

	\PYG{c+c1}{// Localized: must contain at least one localized entry}
	\PYG{n+nd}{@Check}
	\PYG{n}{def} \PYG{n+nf}{checkForDefinedLocaleEntries}\PYG{o}{(}\PYG{n}{Localized} \PYG{n}{localized}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{k}{if} \PYG{o}{(}\PYG{n}{localized}\PYG{o}{.}\PYG{n+na}{values}\PYG{o}{.}\PYG{n+na}{empty}\PYG{o}{)} \PYG{o}{\PYGZob{}}
			\PYG{n}{error}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}If attribute \PYGZsq{}values\PYGZsq{} is defined, then at least one localized values must be given\PYGZdq{}}\PYG{o}{,}
				\PYG{n}{ProjectGeneratorPackage}\PYG{o}{.}\PYG{n+na}{Literals}\PYG{o}{.}\PYG{n+na}{LOCALIZED\PYGZus{}\PYGZus{}VALUES}\PYG{o}{,} \PYG{n}{ValidatorId}\PYG{o}{.}\PYG{n+na}{LOCALIZED\PYGZus{}ENTRY\PYGZus{}UNDEFINED}\PYG{o}{);}
		\PYG{o}{\PYGZcb{}}
	\PYG{o}{\PYGZcb{}}

	\PYG{c+c1}{// LocalizedEntry: Duplicate locale entries for a localized key not allowed}
	\PYG{n+nd}{@Check}
	\PYG{n}{def} \PYG{n+nf}{checkForDuplicateLocaleEntries}\PYG{o}{(}\PYG{n}{Localized} \PYG{n}{\PYGZus{}localized}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{n}{val} \PYG{n}{duplicateEntries} \PYG{o}{=} \PYG{n}{\PYGZus{}localized}\PYG{o}{.}\PYG{n+na}{values}\PYG{o}{.}\PYG{n+na}{stream}\PYG{o}{.}\PYG{n+na}{collect}\PYG{o}{(}\PYG{n}{groupingBy}\PYG{o}{[}\PYG{n}{localizedKey}\PYG{o}{]).}\PYG{n+na}{entrySet}\PYG{o}{.}\PYG{n+na}{stream}\PYG{o}{.}\PYG{n+na}{filter} \PYG{o}{[}
			\PYG{n}{value}\PYG{o}{.}\PYG{n+na}{size} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{1}
		\PYG{o}{].}\PYG{n+na}{map}\PYG{o}{[}\PYG{n}{key}\PYG{o}{].}\PYG{n+na}{distinct}\PYG{o}{.}\PYG{n+na}{collect}\PYG{o}{(}\PYG{n}{toList}\PYG{o}{);}

		\PYG{k}{if} \PYG{o}{(!}\PYG{n}{duplicateEntries}\PYG{o}{.}\PYG{n+na}{empty}\PYG{o}{)} \PYG{o}{\PYGZob{}}
			\PYG{n}{val} \PYG{n}{errorMsg} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}Duplicate locale entries found. \PYGZdq{}} \PYG{o}{+} \PYG{n}{duplicateEntries}\PYG{o}{.}\PYG{n+na}{stream}\PYG{o}{.}\PYG{n+na}{collect}\PYG{o}{(}\PYG{n}{joining}\PYG{o}{(}\PYG{l+s}{\PYGZdq{},\PYGZdq{}}\PYG{o}{,} \PYG{l+s}{\PYGZdq{}[\PYGZdq{}}\PYG{o}{,} \PYG{l+s}{\PYGZdq{}]\PYGZdq{}}\PYG{o}{));}
			\PYG{n}{error}\PYG{o}{(}\PYG{n}{errorMsg}\PYG{o}{,} \PYG{n}{ProjectGeneratorPackage}\PYG{o}{.}\PYG{n+na}{Literals}\PYG{o}{.}\PYG{n+na}{LOCALIZED\PYGZus{}\PYGZus{}VALUES}\PYG{o}{,} \PYG{n}{ValidatorId}\PYG{o}{.}\PYG{n+na}{LOCALIZED\PYGZus{}ENTRY\PYGZus{}DUPLICATE}\PYG{o}{,}
				\PYG{n}{duplicateEntries}\PYG{o}{.}\PYG{n+na}{toArray}\PYG{o}{(}\PYG{n}{newArrayOfSize}\PYG{o}{(}\PYG{n}{duplicateEntries}\PYG{o}{.}\PYG{n+na}{size}\PYG{o}{)));}
		\PYG{o}{\PYGZcb{}}
	\PYG{o}{\PYGZcb{}}

	\PYG{c+c1}{// Observer: Name must be camel case}
	\PYG{n+nd}{@Check}
	\PYG{n}{def} \PYG{n+nf}{checkForCamelCaseObserverName}\PYG{o}{(}\PYG{n}{Observer} \PYG{n}{\PYGZus{}observer}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{k}{if} \PYG{o}{(!}\PYG{n}{CAMEL\PYGZus{}CASE\PYGZus{}PATTERN}\PYG{o}{.}\PYG{n+na}{matcher}\PYG{o}{(}\PYG{n}{\PYGZus{}observer}\PYG{o}{.}\PYG{n+na}{name}\PYG{o}{).}\PYG{n+na}{matches}\PYG{o}{)} \PYG{o}{\PYGZob{}}
			\PYG{n}{val} \PYG{n}{errorMsg} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}Observer name must be a camel case string (e.g.: MyObserverName)\PYGZdq{}}\PYG{o}{;}
			\PYG{n}{error}\PYG{o}{(}\PYG{n}{errorMsg}\PYG{o}{,} \PYG{n}{ProjectGeneratorPackage}\PYG{o}{.}\PYG{n+na}{Literals}\PYG{o}{.}\PYG{n+na}{OBSERVER\PYGZus{}\PYGZus{}NAME}\PYG{o}{,} \PYG{n}{ValidatorId}\PYG{o}{.}\PYG{n+na}{OBSERVER\PYGZus{}NAME\PYGZus{}CAMEL\PYGZus{}CASE}\PYG{o}{);}
		\PYG{o}{\PYGZcb{}}
	\PYG{o}{\PYGZcb{}}

	\PYG{c+c1}{// Observer: Name must be unique}
	\PYG{n+nd}{@Check}
	\PYG{n}{def} \PYG{n+nf}{checkForUniqueObserverName}\PYG{o}{(}\PYG{n}{Observer} \PYG{n}{\PYGZus{}observer}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{n}{val} \PYG{n}{module} \PYG{o}{=} \PYG{n}{\PYGZus{}observer}\PYG{o}{.}\PYG{n+na}{eContainer} \PYG{n}{as} \PYG{n}{Module}\PYG{o}{;}
		\PYG{n}{Objects}\PYG{o}{.}\PYG{n+na}{requireNonNull}\PYG{o}{(}\PYG{n}{module}\PYG{o}{,} \PYG{l+s}{\PYGZdq{}eContainer should be an instance of Module\PYGZdq{}}\PYG{o}{);}
		\PYG{n}{val} \PYG{n}{count} \PYG{o}{=} \PYG{n}{module}\PYG{o}{.}\PYG{n+na}{observers}\PYG{o}{.}\PYG{n+na}{stream}\PYG{o}{.}\PYG{n+na}{filter}\PYG{o}{[}\PYG{n}{name}\PYG{o}{.}\PYG{n+na}{equals}\PYG{o}{(}\PYG{n}{\PYGZus{}observer}\PYG{o}{.}\PYG{n+na}{name}\PYG{o}{)].}\PYG{n+na}{distinct}\PYG{o}{.}\PYG{n+na}{count}\PYG{o}{;}
		\PYG{k}{if} \PYG{o}{(}\PYG{n}{count} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{1}\PYG{o}{)} \PYG{o}{\PYGZob{}}
			\PYG{n}{val} \PYG{n}{errorMsg} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}Observer name is used by \PYGZsq{}\PYGZdq{}} \PYG{o}{+} \PYG{o}{(}\PYG{n}{count} \PYG{o}{\PYGZhy{}} \PYG{l+m+mi}{1}\PYG{o}{)} \PYG{o}{+} \PYG{l+s}{\PYGZdq{}\PYGZsq{} other Observer instances\PYGZdq{}}\PYG{o}{;}
			\PYG{n}{error}\PYG{o}{(}\PYG{n}{errorMsg}\PYG{o}{,} \PYG{n}{ProjectGeneratorPackage}\PYG{o}{.}\PYG{n+na}{Literals}\PYG{o}{.}\PYG{n+na}{OBSERVER\PYGZus{}\PYGZus{}NAME}\PYG{o}{,} \PYG{n}{ValidatorId}\PYG{o}{.}\PYG{n+na}{OBSERVER\PYGZus{}NAME\PYGZus{}DUPLICATE}\PYG{o}{);}
		\PYG{o}{\PYGZcb{}}
	\PYG{o}{\PYGZcb{}}

	\PYG{c+c1}{// ServiceConfig: Message Bundles must be unique}
	\PYG{n+nd}{@Check}
	\PYG{n}{def} \PYG{n+nf}{checkForUniqueServiceConfigMessagebundles}\PYG{o}{(}\PYG{n}{ServiceConfig} \PYG{n}{\PYGZus{}serviceConfig}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{n}{val} \PYG{n}{duplciateBundles} \PYG{o}{=} \PYG{n}{\PYGZus{}serviceConfig}\PYG{o}{.}\PYG{n+na}{messageBundles}\PYG{o}{.}\PYG{n+na}{stream}\PYG{o}{.}\PYG{n+na}{collect}\PYG{o}{(}\PYG{n}{groupingBy}\PYG{o}{[}\PYG{n}{name}\PYG{o}{]).}\PYG{n+na}{entrySet}\PYG{o}{.}\PYG{n+na}{stream}\PYG{o}{.}\PYG{n+na}{filter} \PYG{o}{[}
			\PYG{n}{value}\PYG{o}{.}\PYG{n+na}{size} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{1}
		\PYG{o}{].}\PYG{n+na}{map}\PYG{o}{[}\PYG{n}{key}\PYG{o}{].}\PYG{n+na}{distinct}\PYG{o}{.}\PYG{n+na}{collect}\PYG{o}{(}\PYG{n}{toList}\PYG{o}{);}
		\PYG{k}{if} \PYG{o}{(!}\PYG{n}{duplciateBundles}\PYG{o}{.}\PYG{n+na}{empty}\PYG{o}{)} \PYG{o}{\PYGZob{}}
			\PYG{n}{val} \PYG{n}{errorMsg} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}Duplicate message bundles found. \PYGZdq{}} \PYG{o}{+}
				\PYG{n}{duplciateBundles}\PYG{o}{.}\PYG{n+na}{stream}\PYG{o}{.}\PYG{n+na}{collect}\PYG{o}{(}\PYG{n}{joining}\PYG{o}{(}\PYG{l+s}{\PYGZdq{},\PYGZdq{}}\PYG{o}{,} \PYG{l+s}{\PYGZdq{}[\PYGZdq{}}\PYG{o}{,} \PYG{l+s}{\PYGZdq{}]\PYGZdq{}}\PYG{o}{));}
			\PYG{n}{error}\PYG{o}{(}\PYG{n}{errorMsg}\PYG{o}{,} \PYG{n}{ProjectGeneratorPackage}\PYG{o}{.}\PYG{n+na}{Literals}\PYG{o}{.}\PYG{n+na}{SERVICE\PYGZus{}CONFIG\PYGZus{}\PYGZus{}MESSAGE\PYGZus{}BUNDLES}\PYG{o}{,}
				\PYG{n}{ValidatorId}\PYG{o}{.}\PYG{n+na}{SERVICE\PYGZus{}CONFIG\PYGZus{}MESSAGE\PYGZus{}BUNDLE\PYGZus{}DUPLICATE}\PYG{o}{,}
				\PYG{n}{duplciateBundles}\PYG{o}{.}\PYG{n+na}{toArray}\PYG{o}{(}\PYG{n}{newArrayOfSize}\PYG{o}{(}\PYG{n}{duplciateBundles}\PYG{o}{.}\PYG{n+na}{size}\PYG{o}{)));}
		\PYG{o}{\PYGZcb{}}
	\PYG{o}{\PYGZcb{}}

	\PYG{c+c1}{// JpaConfig: Message Bundles must be unique}
	\PYG{n+nd}{@Check}
	\PYG{n}{def} \PYG{n+nf}{checkForUniqueJpaConfigMessagebundles}\PYG{o}{(}\PYG{n}{JpaConfig} \PYG{n}{\PYGZus{}jpaConfig}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{n}{val} \PYG{n}{duplciateBundles} \PYG{o}{=} \PYG{n}{\PYGZus{}jpaConfig}\PYG{o}{.}\PYG{n+na}{localizedEnums}\PYG{o}{.}\PYG{n+na}{stream}\PYG{o}{.}\PYG{n+na}{collect}\PYG{o}{(}\PYG{n}{groupingBy}\PYG{o}{[}\PYG{n}{name}\PYG{o}{]).}\PYG{n+na}{entrySet}\PYG{o}{.}\PYG{n+na}{stream}\PYG{o}{.}\PYG{n+na}{filter} \PYG{o}{[}
			\PYG{n}{value}\PYG{o}{.}\PYG{n+na}{size} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{1}
		\PYG{o}{].}\PYG{n+na}{map}\PYG{o}{[}\PYG{n}{key}\PYG{o}{].}\PYG{n+na}{distinct}\PYG{o}{.}\PYG{n+na}{collect}\PYG{o}{(}\PYG{n}{toList}\PYG{o}{);}
		\PYG{k}{if} \PYG{o}{(!}\PYG{n}{duplciateBundles}\PYG{o}{.}\PYG{n+na}{empty}\PYG{o}{)} \PYG{o}{\PYGZob{}}
			\PYG{n}{val} \PYG{n}{errorMsg} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}Duplicate localized enums found. \PYGZdq{}} \PYG{o}{+}
				\PYG{n}{duplciateBundles}\PYG{o}{.}\PYG{n+na}{stream}\PYG{o}{.}\PYG{n+na}{collect}\PYG{o}{(}\PYG{n}{joining}\PYG{o}{(}\PYG{l+s}{\PYGZdq{},\PYGZdq{}}\PYG{o}{,} \PYG{l+s}{\PYGZdq{}[\PYGZdq{}}\PYG{o}{,} \PYG{l+s}{\PYGZdq{}]\PYGZdq{}}\PYG{o}{));}
			\PYG{n}{error}\PYG{o}{(}\PYG{n}{errorMsg}\PYG{o}{,} \PYG{n}{ProjectGeneratorPackage}\PYG{o}{.}\PYG{n+na}{Literals}\PYG{o}{.}\PYG{n+na}{JPA\PYGZus{}CONFIG\PYGZus{}\PYGZus{}LOCALIZED\PYGZus{}ENUMS}\PYG{o}{,}
				\PYG{n}{ValidatorId}\PYG{o}{.}\PYG{n+na}{JPA\PYGZus{}LOCALIZED\PYGZus{}ENUMS\PYGZus{}DUPLICATE}\PYG{o}{,}
				\PYG{n}{duplciateBundles}\PYG{o}{.}\PYG{n+na}{toArray}\PYG{o}{(}\PYG{n}{newArrayOfSize}\PYG{o}{(}\PYG{n}{duplciateBundles}\PYG{o}{.}\PYG{n+na}{size}\PYG{o}{)));}
		\PYG{o}{\PYGZcb{}}
	\PYG{o}{\PYGZcb{}}
\PYG{o}{\PYGZcb{}}
\end{Verbatim}
