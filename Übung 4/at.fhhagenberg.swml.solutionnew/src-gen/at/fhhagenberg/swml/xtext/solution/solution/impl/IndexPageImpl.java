/**
 * generated by Xtext 2.10.0
 */
package at.fhhagenberg.swml.xtext.solution.solution.impl;

import at.fhhagenberg.swml.xtext.solution.solution.ContextualLink;
import at.fhhagenberg.swml.xtext.solution.solution.IndexPage;
import at.fhhagenberg.swml.xtext.solution.solution.SolutionPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Index Page</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link at.fhhagenberg.swml.xtext.solution.solution.impl.IndexPageImpl#getBack <em>Back</em>}</li>
 * </ul>
 *
 * @generated
 */
public class IndexPageImpl extends DynamicPageImpl implements IndexPage
{
  /**
   * The cached value of the '{@link #getBack() <em>Back</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBack()
   * @generated
   * @ordered
   */
  protected ContextualLink back;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IndexPageImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SolutionPackage.Literals.INDEX_PAGE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ContextualLink getBack()
  {
    return back;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBack(ContextualLink newBack, NotificationChain msgs)
  {
    ContextualLink oldBack = back;
    back = newBack;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SolutionPackage.INDEX_PAGE__BACK, oldBack, newBack);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBack(ContextualLink newBack)
  {
    if (newBack != back)
    {
      NotificationChain msgs = null;
      if (back != null)
        msgs = ((InternalEObject)back).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SolutionPackage.INDEX_PAGE__BACK, null, msgs);
      if (newBack != null)
        msgs = ((InternalEObject)newBack).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SolutionPackage.INDEX_PAGE__BACK, null, msgs);
      msgs = basicSetBack(newBack, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SolutionPackage.INDEX_PAGE__BACK, newBack, newBack));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SolutionPackage.INDEX_PAGE__BACK:
        return basicSetBack(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SolutionPackage.INDEX_PAGE__BACK:
        return getBack();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SolutionPackage.INDEX_PAGE__BACK:
        setBack((ContextualLink)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SolutionPackage.INDEX_PAGE__BACK:
        setBack((ContextualLink)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SolutionPackage.INDEX_PAGE__BACK:
        return back != null;
    }
    return super.eIsSet(featureID);
  }

} //IndexPageImpl
