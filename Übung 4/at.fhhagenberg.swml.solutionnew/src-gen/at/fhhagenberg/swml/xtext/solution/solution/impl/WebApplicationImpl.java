/**
 * generated by Xtext 2.10.0
 */
package at.fhhagenberg.swml.xtext.solution.solution.impl;

import at.fhhagenberg.swml.xtext.solution.solution.Entity;
import at.fhhagenberg.swml.xtext.solution.solution.Relationship;
import at.fhhagenberg.swml.xtext.solution.solution.SolutionPackage;
import at.fhhagenberg.swml.xtext.solution.solution.StaticPage;
import at.fhhagenberg.swml.xtext.solution.solution.WebApplication;
import at.fhhagenberg.swml.xtext.solution.solution.WebPage;

import java.util.Collection;
import java.util.Date;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Web Application</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link at.fhhagenberg.swml.xtext.solution.solution.impl.WebApplicationImpl#getName <em>Name</em>}</li>
 *   <li>{@link at.fhhagenberg.swml.xtext.solution.solution.impl.WebApplicationImpl#getEntities <em>Entities</em>}</li>
 *   <li>{@link at.fhhagenberg.swml.xtext.solution.solution.impl.WebApplicationImpl#getRelationships <em>Relationships</em>}</li>
 *   <li>{@link at.fhhagenberg.swml.xtext.solution.solution.impl.WebApplicationImpl#getWebPages <em>Web Pages</em>}</li>
 *   <li>{@link at.fhhagenberg.swml.xtext.solution.solution.impl.WebApplicationImpl#getHomepage <em>Homepage</em>}</li>
 *   <li>{@link at.fhhagenberg.swml.xtext.solution.solution.impl.WebApplicationImpl#getCreationDate <em>Creation Date</em>}</li>
 * </ul>
 *
 * @generated
 */
public class WebApplicationImpl extends MinimalEObjectImpl.Container implements WebApplication
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getEntities() <em>Entities</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEntities()
   * @generated
   * @ordered
   */
  protected EList<Entity> entities;

  /**
   * The cached value of the '{@link #getRelationships() <em>Relationships</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRelationships()
   * @generated
   * @ordered
   */
  protected EList<Relationship> relationships;

  /**
   * The cached value of the '{@link #getWebPages() <em>Web Pages</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWebPages()
   * @generated
   * @ordered
   */
  protected EList<WebPage> webPages;

  /**
   * The cached value of the '{@link #getHomepage() <em>Homepage</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHomepage()
   * @generated
   * @ordered
   */
  protected StaticPage homepage;

  /**
   * The default value of the '{@link #getCreationDate() <em>Creation Date</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCreationDate()
   * @generated
   * @ordered
   */
  protected static final Date CREATION_DATE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCreationDate() <em>Creation Date</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCreationDate()
   * @generated
   * @ordered
   */
  protected Date creationDate = CREATION_DATE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected WebApplicationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SolutionPackage.Literals.WEB_APPLICATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SolutionPackage.WEB_APPLICATION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Entity> getEntities()
  {
    if (entities == null)
    {
      entities = new EObjectContainmentEList<Entity>(Entity.class, this, SolutionPackage.WEB_APPLICATION__ENTITIES);
    }
    return entities;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Relationship> getRelationships()
  {
    if (relationships == null)
    {
      relationships = new EObjectContainmentEList<Relationship>(Relationship.class, this, SolutionPackage.WEB_APPLICATION__RELATIONSHIPS);
    }
    return relationships;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<WebPage> getWebPages()
  {
    if (webPages == null)
    {
      webPages = new EObjectContainmentEList<WebPage>(WebPage.class, this, SolutionPackage.WEB_APPLICATION__WEB_PAGES);
    }
    return webPages;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StaticPage getHomepage()
  {
    if (homepage != null && homepage.eIsProxy())
    {
      InternalEObject oldHomepage = (InternalEObject)homepage;
      homepage = (StaticPage)eResolveProxy(oldHomepage);
      if (homepage != oldHomepage)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SolutionPackage.WEB_APPLICATION__HOMEPAGE, oldHomepage, homepage));
      }
    }
    return homepage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StaticPage basicGetHomepage()
  {
    return homepage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHomepage(StaticPage newHomepage)
  {
    StaticPage oldHomepage = homepage;
    homepage = newHomepage;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SolutionPackage.WEB_APPLICATION__HOMEPAGE, oldHomepage, homepage));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Date getCreationDate()
  {
    return creationDate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCreationDate(Date newCreationDate)
  {
    Date oldCreationDate = creationDate;
    creationDate = newCreationDate;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SolutionPackage.WEB_APPLICATION__CREATION_DATE, oldCreationDate, creationDate));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SolutionPackage.WEB_APPLICATION__ENTITIES:
        return ((InternalEList<?>)getEntities()).basicRemove(otherEnd, msgs);
      case SolutionPackage.WEB_APPLICATION__RELATIONSHIPS:
        return ((InternalEList<?>)getRelationships()).basicRemove(otherEnd, msgs);
      case SolutionPackage.WEB_APPLICATION__WEB_PAGES:
        return ((InternalEList<?>)getWebPages()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SolutionPackage.WEB_APPLICATION__NAME:
        return getName();
      case SolutionPackage.WEB_APPLICATION__ENTITIES:
        return getEntities();
      case SolutionPackage.WEB_APPLICATION__RELATIONSHIPS:
        return getRelationships();
      case SolutionPackage.WEB_APPLICATION__WEB_PAGES:
        return getWebPages();
      case SolutionPackage.WEB_APPLICATION__HOMEPAGE:
        if (resolve) return getHomepage();
        return basicGetHomepage();
      case SolutionPackage.WEB_APPLICATION__CREATION_DATE:
        return getCreationDate();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SolutionPackage.WEB_APPLICATION__NAME:
        setName((String)newValue);
        return;
      case SolutionPackage.WEB_APPLICATION__ENTITIES:
        getEntities().clear();
        getEntities().addAll((Collection<? extends Entity>)newValue);
        return;
      case SolutionPackage.WEB_APPLICATION__RELATIONSHIPS:
        getRelationships().clear();
        getRelationships().addAll((Collection<? extends Relationship>)newValue);
        return;
      case SolutionPackage.WEB_APPLICATION__WEB_PAGES:
        getWebPages().clear();
        getWebPages().addAll((Collection<? extends WebPage>)newValue);
        return;
      case SolutionPackage.WEB_APPLICATION__HOMEPAGE:
        setHomepage((StaticPage)newValue);
        return;
      case SolutionPackage.WEB_APPLICATION__CREATION_DATE:
        setCreationDate((Date)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SolutionPackage.WEB_APPLICATION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case SolutionPackage.WEB_APPLICATION__ENTITIES:
        getEntities().clear();
        return;
      case SolutionPackage.WEB_APPLICATION__RELATIONSHIPS:
        getRelationships().clear();
        return;
      case SolutionPackage.WEB_APPLICATION__WEB_PAGES:
        getWebPages().clear();
        return;
      case SolutionPackage.WEB_APPLICATION__HOMEPAGE:
        setHomepage((StaticPage)null);
        return;
      case SolutionPackage.WEB_APPLICATION__CREATION_DATE:
        setCreationDate(CREATION_DATE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SolutionPackage.WEB_APPLICATION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case SolutionPackage.WEB_APPLICATION__ENTITIES:
        return entities != null && !entities.isEmpty();
      case SolutionPackage.WEB_APPLICATION__RELATIONSHIPS:
        return relationships != null && !relationships.isEmpty();
      case SolutionPackage.WEB_APPLICATION__WEB_PAGES:
        return webPages != null && !webPages.isEmpty();
      case SolutionPackage.WEB_APPLICATION__HOMEPAGE:
        return homepage != null;
      case SolutionPackage.WEB_APPLICATION__CREATION_DATE:
        return CREATION_DATE_EDEFAULT == null ? creationDate != null : !CREATION_DATE_EDEFAULT.equals(creationDate);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", creationDate: ");
    result.append(creationDate);
    result.append(')');
    return result.toString();
  }

} //WebApplicationImpl
