/*
 * generated by Xtext 2.10.0
 */
grammar InternalLanguage;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package at.fh.hagenberg.swml.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package at.fh.hagenberg.swml.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import at.fh.hagenberg.swml.xtext.services.LanguageGrammarAccess;

}

@parser::members {

 	private LanguageGrammarAccess grammarAccess;

    public InternalLanguageParser(TokenStream input, LanguageGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "WebApplication";
   	}

   	@Override
   	protected LanguageGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleWebApplication
entryRuleWebApplication returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWebApplicationRule()); }
	iv_ruleWebApplication=ruleWebApplication
	{ $current=$iv_ruleWebApplication.current; }
	EOF;

// Rule WebApplication
ruleWebApplication returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='webapp'
		{
			newLeafNode(otherlv_0, grammarAccess.getWebApplicationAccess().getWebappKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getWebApplicationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWebApplicationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getWebApplicationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWebApplicationAccess().getEntitiesEntityParserRuleCall_3_0());
				}
				lv_entities_3_0=ruleEntity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWebApplicationRule());
					}
					add(
						$current,
						"entities",
						lv_entities_3_0,
						"at.fh.hagenberg.swml.xtext.Language.Entity");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getWebApplicationAccess().getRelationshipsRelationShipParserRuleCall_4_0());
				}
				lv_relationships_4_0=ruleRelationShip
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWebApplicationRule());
					}
					set(
						$current,
						"relationships",
						lv_relationships_4_0,
						"at.fh.hagenberg.swml.xtext.Language.RelationShip");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getWebApplicationAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleRelationShip
entryRuleRelationShip returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationShipRule()); }
	iv_ruleRelationShip=ruleRelationShip
	{ $current=$iv_ruleRelationShip.current; }
	EOF;

// Rule RelationShip
ruleRelationShip returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='relationship'
		{
			newLeafNode(otherlv_0, grammarAccess.getRelationShipAccess().getRelationshipKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRelationShipAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationShipRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getRelationShipAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='lowerBound'
		{
			newLeafNode(otherlv_3, grammarAccess.getRelationShipAccess().getLowerBoundKeyword_3());
		}
		(
			(
				lv_lower_4_0=RULE_INT
				{
					newLeafNode(lv_lower_4_0, grammarAccess.getRelationShipAccess().getLowerINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationShipRule());
					}
					setWithLastConsumed(
						$current,
						"lower",
						lv_lower_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5='upperBound'
		{
			newLeafNode(otherlv_5, grammarAccess.getRelationShipAccess().getUpperBoundKeyword_5());
		}
		(
			(
				lv_lower_6_0=RULE_INT
				{
					newLeafNode(lv_lower_6_0, grammarAccess.getRelationShipAccess().getLowerINTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationShipRule());
					}
					setWithLastConsumed(
						$current,
						"lower",
						lv_lower_6_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_7='source'
		{
			newLeafNode(otherlv_7, grammarAccess.getRelationShipAccess().getSourceKeyword_7());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationShipRule());
					}
				}
				otherlv_8=RULE_ID
				{
					newLeafNode(otherlv_8, grammarAccess.getRelationShipAccess().getSourceEntityCrossReference_8_0());
				}
			)
		)
		otherlv_9='target'
		{
			newLeafNode(otherlv_9, grammarAccess.getRelationShipAccess().getTargetKeyword_9());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationShipRule());
					}
				}
				otherlv_10=RULE_ID
				{
					newLeafNode(otherlv_10, grammarAccess.getRelationShipAccess().getTargetEntityCrossReference_10_0());
				}
			)
		)
		(
			otherlv_11='opposite'
			{
				newLeafNode(otherlv_11, grammarAccess.getRelationShipAccess().getOppositeKeyword_11_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRelationShipRule());
						}
					}
					otherlv_12=RULE_ID
					{
						newLeafNode(otherlv_12, grammarAccess.getRelationShipAccess().getOppositeRelationShipCrossReference_11_1_0());
					}
				)
			)
		)?
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getRelationShipAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='entity'
		{
			newLeafNode(otherlv_0, grammarAccess.getEntityAccess().getEntityKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_3_0());
				}
				lv_attributes_3_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					add(
						$current,
						"attributes",
						lv_attributes_3_0,
						"at.fh.hagenberg.swml.xtext.Language.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='id'
		{
			newLeafNode(otherlv_4, grammarAccess.getEntityAccess().getIdKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getEntityAccess().getIdAttributeCrossReference_5_0());
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='attriubte'
		{
			newLeafNode(otherlv_0, grammarAccess.getAttributeAccess().getAttriubteKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getAttributeAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='type'
		{
			newLeafNode(otherlv_3, grammarAccess.getAttributeAccess().getTypeKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getTypeDatatypeEnumRuleCall_4_0());
				}
				lv_type_4_0=ruleDatatype
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"type",
						lv_type_4_0,
						"at.fh.hagenberg.swml.xtext.Language.Datatype");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getAttributeAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Rule Datatype
ruleDatatype returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='int'
			{
				$current = grammarAccess.getDatatypeAccess().getINTEGEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDatatypeAccess().getINTEGEREnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='bool'
			{
				$current = grammarAccess.getDatatypeAccess().getBOOLEANEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDatatypeAccess().getBOOLEANEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
