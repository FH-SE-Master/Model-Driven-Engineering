/**
 * generated by Xtext 2.10.0
 */
package at.fh.hagenberg.swml.xtext.ui.quickfix;

import at.fh.hagenberg.swml.xtext.language.Entity;
import at.fh.hagenberg.swml.xtext.validation.LanguageValidator;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.ui.editor.model.edit.IModificationContext;
import org.eclipse.xtext.ui.editor.model.edit.ISemanticModification;
import org.eclipse.xtext.ui.editor.quickfix.DefaultQuickfixProvider;
import org.eclipse.xtext.ui.editor.quickfix.Fix;
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionAcceptor;
import org.eclipse.xtext.validation.Issue;
import org.eclipse.xtext.xbase.lib.StringExtensions;

/**
 * Custom quickfixes.
 * 
 * See https://www.eclipse.org/Xtext/documentation/310_eclipse_support.html#quick-fixes
 */
@SuppressWarnings("all")
public class LanguageQuickfixProvider extends DefaultQuickfixProvider {
  /**
   * Modifies the meta model entity instance
   */
  public static final class MySemanticModification implements ISemanticModification {
    @Override
    public void apply(final EObject element, final IModificationContext context) throws Exception {
      if ((element instanceof Entity)) {
        String _name = ((Entity) element).getName();
        String _firstUpper = StringExtensions.toFirstUpper(_name);
        ((Entity) element).setName(_firstUpper);
      }
    }
  }
  
  @Fix(LanguageValidator.INVALID_NAME)
  public void capitalizeName(final Issue issue, final IssueResolutionAcceptor acceptor) {
    LanguageQuickfixProvider.MySemanticModification _mySemanticModification = new LanguageQuickfixProvider.MySemanticModification();
    acceptor.accept(issue, "Capitalize name", "Capitalize the name.", "upcase.png", _mySemanticModification);
  }
}
